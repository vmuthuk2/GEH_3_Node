// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LoadBalancing.proto

#ifndef PROTOBUF_LoadBalancing_2eproto__INCLUDED
#define PROTOBUF_LoadBalancing_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace freedm {
namespace broker {
namespace lb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_LoadBalancing_2eproto();
void protobuf_AssignDesc_LoadBalancing_2eproto();
void protobuf_ShutdownFile_LoadBalancing_2eproto();

class StateChangeMessage;
class DraftRequestMessage;
class DraftAgeMessage;
class DraftSelectMessage;
class DraftAcceptMessage;
class TooLateMessage;
class CollectedStateMessage;
class LoadBalancingMessage;

// ===================================================================

class StateChangeMessage : public ::google::protobuf::Message {
 public:
  StateChangeMessage();
  virtual ~StateChangeMessage();

  StateChangeMessage(const StateChangeMessage& from);

  inline StateChangeMessage& operator=(const StateChangeMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StateChangeMessage& default_instance();

  void Swap(StateChangeMessage* other);

  // implements Message ----------------------------------------------

  StateChangeMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StateChangeMessage& from);
  void MergeFrom(const StateChangeMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline const ::std::string& state() const;
  inline void set_state(const ::std::string& value);
  inline void set_state(const char* value);
  inline void set_state(const char* value, size_t size);
  inline ::std::string* mutable_state();
  inline ::std::string* release_state();
  inline void set_allocated_state(::std::string* state);

  // @@protoc_insertion_point(class_scope:freedm.broker.lb.StateChangeMessage)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* state_;
  friend void  protobuf_AddDesc_LoadBalancing_2eproto();
  friend void protobuf_AssignDesc_LoadBalancing_2eproto();
  friend void protobuf_ShutdownFile_LoadBalancing_2eproto();

  void InitAsDefaultInstance();
  static StateChangeMessage* default_instance_;
};
// -------------------------------------------------------------------

class DraftRequestMessage : public ::google::protobuf::Message {
 public:
  DraftRequestMessage();
  virtual ~DraftRequestMessage();

  DraftRequestMessage(const DraftRequestMessage& from);

  inline DraftRequestMessage& operator=(const DraftRequestMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DraftRequestMessage& default_instance();

  void Swap(DraftRequestMessage* other);

  // implements Message ----------------------------------------------

  DraftRequestMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DraftRequestMessage& from);
  void MergeFrom(const DraftRequestMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:freedm.broker.lb.DraftRequestMessage)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_LoadBalancing_2eproto();
  friend void protobuf_AssignDesc_LoadBalancing_2eproto();
  friend void protobuf_ShutdownFile_LoadBalancing_2eproto();

  void InitAsDefaultInstance();
  static DraftRequestMessage* default_instance_;
};
// -------------------------------------------------------------------

class DraftAgeMessage : public ::google::protobuf::Message {
 public:
  DraftAgeMessage();
  virtual ~DraftAgeMessage();

  DraftAgeMessage(const DraftAgeMessage& from);

  inline DraftAgeMessage& operator=(const DraftAgeMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DraftAgeMessage& default_instance();

  void Swap(DraftAgeMessage* other);

  // implements Message ----------------------------------------------

  DraftAgeMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DraftAgeMessage& from);
  void MergeFrom(const DraftAgeMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float draft_age = 1;
  inline bool has_draft_age() const;
  inline void clear_draft_age();
  static const int kDraftAgeFieldNumber = 1;
  inline float draft_age() const;
  inline void set_draft_age(float value);

  // @@protoc_insertion_point(class_scope:freedm.broker.lb.DraftAgeMessage)
 private:
  inline void set_has_draft_age();
  inline void clear_has_draft_age();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float draft_age_;
  friend void  protobuf_AddDesc_LoadBalancing_2eproto();
  friend void protobuf_AssignDesc_LoadBalancing_2eproto();
  friend void protobuf_ShutdownFile_LoadBalancing_2eproto();

  void InitAsDefaultInstance();
  static DraftAgeMessage* default_instance_;
};
// -------------------------------------------------------------------

class DraftSelectMessage : public ::google::protobuf::Message {
 public:
  DraftSelectMessage();
  virtual ~DraftSelectMessage();

  DraftSelectMessage(const DraftSelectMessage& from);

  inline DraftSelectMessage& operator=(const DraftSelectMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DraftSelectMessage& default_instance();

  void Swap(DraftSelectMessage* other);

  // implements Message ----------------------------------------------

  DraftSelectMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DraftSelectMessage& from);
  void MergeFrom(const DraftSelectMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float migrate_step = 1;
  inline bool has_migrate_step() const;
  inline void clear_migrate_step();
  static const int kMigrateStepFieldNumber = 1;
  inline float migrate_step() const;
  inline void set_migrate_step(float value);

  // @@protoc_insertion_point(class_scope:freedm.broker.lb.DraftSelectMessage)
 private:
  inline void set_has_migrate_step();
  inline void clear_has_migrate_step();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float migrate_step_;
  friend void  protobuf_AddDesc_LoadBalancing_2eproto();
  friend void protobuf_AssignDesc_LoadBalancing_2eproto();
  friend void protobuf_ShutdownFile_LoadBalancing_2eproto();

  void InitAsDefaultInstance();
  static DraftSelectMessage* default_instance_;
};
// -------------------------------------------------------------------

class DraftAcceptMessage : public ::google::protobuf::Message {
 public:
  DraftAcceptMessage();
  virtual ~DraftAcceptMessage();

  DraftAcceptMessage(const DraftAcceptMessage& from);

  inline DraftAcceptMessage& operator=(const DraftAcceptMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DraftAcceptMessage& default_instance();

  void Swap(DraftAcceptMessage* other);

  // implements Message ----------------------------------------------

  DraftAcceptMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DraftAcceptMessage& from);
  void MergeFrom(const DraftAcceptMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float migrate_step = 1;
  inline bool has_migrate_step() const;
  inline void clear_migrate_step();
  static const int kMigrateStepFieldNumber = 1;
  inline float migrate_step() const;
  inline void set_migrate_step(float value);

  // @@protoc_insertion_point(class_scope:freedm.broker.lb.DraftAcceptMessage)
 private:
  inline void set_has_migrate_step();
  inline void clear_has_migrate_step();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float migrate_step_;
  friend void  protobuf_AddDesc_LoadBalancing_2eproto();
  friend void protobuf_AssignDesc_LoadBalancing_2eproto();
  friend void protobuf_ShutdownFile_LoadBalancing_2eproto();

  void InitAsDefaultInstance();
  static DraftAcceptMessage* default_instance_;
};
// -------------------------------------------------------------------

class TooLateMessage : public ::google::protobuf::Message {
 public:
  TooLateMessage();
  virtual ~TooLateMessage();

  TooLateMessage(const TooLateMessage& from);

  inline TooLateMessage& operator=(const TooLateMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TooLateMessage& default_instance();

  void Swap(TooLateMessage* other);

  // implements Message ----------------------------------------------

  TooLateMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TooLateMessage& from);
  void MergeFrom(const TooLateMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float migrate_step = 1;
  inline bool has_migrate_step() const;
  inline void clear_migrate_step();
  static const int kMigrateStepFieldNumber = 1;
  inline float migrate_step() const;
  inline void set_migrate_step(float value);

  // @@protoc_insertion_point(class_scope:freedm.broker.lb.TooLateMessage)
 private:
  inline void set_has_migrate_step();
  inline void clear_has_migrate_step();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float migrate_step_;
  friend void  protobuf_AddDesc_LoadBalancing_2eproto();
  friend void protobuf_AssignDesc_LoadBalancing_2eproto();
  friend void protobuf_ShutdownFile_LoadBalancing_2eproto();

  void InitAsDefaultInstance();
  static TooLateMessage* default_instance_;
};
// -------------------------------------------------------------------

class CollectedStateMessage : public ::google::protobuf::Message {
 public:
  CollectedStateMessage();
  virtual ~CollectedStateMessage();

  CollectedStateMessage(const CollectedStateMessage& from);

  inline CollectedStateMessage& operator=(const CollectedStateMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CollectedStateMessage& default_instance();

  void Swap(CollectedStateMessage* other);

  // implements Message ----------------------------------------------

  CollectedStateMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CollectedStateMessage& from);
  void MergeFrom(const CollectedStateMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float gross_power_flow = 1;
  inline bool has_gross_power_flow() const;
  inline void clear_gross_power_flow();
  static const int kGrossPowerFlowFieldNumber = 1;
  inline float gross_power_flow() const;
  inline void set_gross_power_flow(float value);

  // @@protoc_insertion_point(class_scope:freedm.broker.lb.CollectedStateMessage)
 private:
  inline void set_has_gross_power_flow();
  inline void clear_has_gross_power_flow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float gross_power_flow_;
  friend void  protobuf_AddDesc_LoadBalancing_2eproto();
  friend void protobuf_AssignDesc_LoadBalancing_2eproto();
  friend void protobuf_ShutdownFile_LoadBalancing_2eproto();

  void InitAsDefaultInstance();
  static CollectedStateMessage* default_instance_;
};
// -------------------------------------------------------------------

class LoadBalancingMessage : public ::google::protobuf::Message {
 public:
  LoadBalancingMessage();
  virtual ~LoadBalancingMessage();

  LoadBalancingMessage(const LoadBalancingMessage& from);

  inline LoadBalancingMessage& operator=(const LoadBalancingMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadBalancingMessage& default_instance();

  void Swap(LoadBalancingMessage* other);

  // implements Message ----------------------------------------------

  LoadBalancingMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoadBalancingMessage& from);
  void MergeFrom(const LoadBalancingMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .freedm.broker.lb.StateChangeMessage state_change_message = 1;
  inline bool has_state_change_message() const;
  inline void clear_state_change_message();
  static const int kStateChangeMessageFieldNumber = 1;
  inline const ::freedm::broker::lb::StateChangeMessage& state_change_message() const;
  inline ::freedm::broker::lb::StateChangeMessage* mutable_state_change_message();
  inline ::freedm::broker::lb::StateChangeMessage* release_state_change_message();
  inline void set_allocated_state_change_message(::freedm::broker::lb::StateChangeMessage* state_change_message);

  // optional .freedm.broker.lb.DraftRequestMessage draft_request_message = 2;
  inline bool has_draft_request_message() const;
  inline void clear_draft_request_message();
  static const int kDraftRequestMessageFieldNumber = 2;
  inline const ::freedm::broker::lb::DraftRequestMessage& draft_request_message() const;
  inline ::freedm::broker::lb::DraftRequestMessage* mutable_draft_request_message();
  inline ::freedm::broker::lb::DraftRequestMessage* release_draft_request_message();
  inline void set_allocated_draft_request_message(::freedm::broker::lb::DraftRequestMessage* draft_request_message);

  // optional .freedm.broker.lb.DraftAgeMessage draft_age_message = 3;
  inline bool has_draft_age_message() const;
  inline void clear_draft_age_message();
  static const int kDraftAgeMessageFieldNumber = 3;
  inline const ::freedm::broker::lb::DraftAgeMessage& draft_age_message() const;
  inline ::freedm::broker::lb::DraftAgeMessage* mutable_draft_age_message();
  inline ::freedm::broker::lb::DraftAgeMessage* release_draft_age_message();
  inline void set_allocated_draft_age_message(::freedm::broker::lb::DraftAgeMessage* draft_age_message);

  // optional .freedm.broker.lb.DraftSelectMessage draft_select_message = 4;
  inline bool has_draft_select_message() const;
  inline void clear_draft_select_message();
  static const int kDraftSelectMessageFieldNumber = 4;
  inline const ::freedm::broker::lb::DraftSelectMessage& draft_select_message() const;
  inline ::freedm::broker::lb::DraftSelectMessage* mutable_draft_select_message();
  inline ::freedm::broker::lb::DraftSelectMessage* release_draft_select_message();
  inline void set_allocated_draft_select_message(::freedm::broker::lb::DraftSelectMessage* draft_select_message);

  // optional .freedm.broker.lb.DraftAcceptMessage draft_accept_message = 5;
  inline bool has_draft_accept_message() const;
  inline void clear_draft_accept_message();
  static const int kDraftAcceptMessageFieldNumber = 5;
  inline const ::freedm::broker::lb::DraftAcceptMessage& draft_accept_message() const;
  inline ::freedm::broker::lb::DraftAcceptMessage* mutable_draft_accept_message();
  inline ::freedm::broker::lb::DraftAcceptMessage* release_draft_accept_message();
  inline void set_allocated_draft_accept_message(::freedm::broker::lb::DraftAcceptMessage* draft_accept_message);

  // optional .freedm.broker.lb.TooLateMessage too_late_message = 6;
  inline bool has_too_late_message() const;
  inline void clear_too_late_message();
  static const int kTooLateMessageFieldNumber = 6;
  inline const ::freedm::broker::lb::TooLateMessage& too_late_message() const;
  inline ::freedm::broker::lb::TooLateMessage* mutable_too_late_message();
  inline ::freedm::broker::lb::TooLateMessage* release_too_late_message();
  inline void set_allocated_too_late_message(::freedm::broker::lb::TooLateMessage* too_late_message);

  // optional .freedm.broker.lb.CollectedStateMessage collected_state_message = 7;
  inline bool has_collected_state_message() const;
  inline void clear_collected_state_message();
  static const int kCollectedStateMessageFieldNumber = 7;
  inline const ::freedm::broker::lb::CollectedStateMessage& collected_state_message() const;
  inline ::freedm::broker::lb::CollectedStateMessage* mutable_collected_state_message();
  inline ::freedm::broker::lb::CollectedStateMessage* release_collected_state_message();
  inline void set_allocated_collected_state_message(::freedm::broker::lb::CollectedStateMessage* collected_state_message);

  // @@protoc_insertion_point(class_scope:freedm.broker.lb.LoadBalancingMessage)
 private:
  inline void set_has_state_change_message();
  inline void clear_has_state_change_message();
  inline void set_has_draft_request_message();
  inline void clear_has_draft_request_message();
  inline void set_has_draft_age_message();
  inline void clear_has_draft_age_message();
  inline void set_has_draft_select_message();
  inline void clear_has_draft_select_message();
  inline void set_has_draft_accept_message();
  inline void clear_has_draft_accept_message();
  inline void set_has_too_late_message();
  inline void clear_has_too_late_message();
  inline void set_has_collected_state_message();
  inline void clear_has_collected_state_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::freedm::broker::lb::StateChangeMessage* state_change_message_;
  ::freedm::broker::lb::DraftRequestMessage* draft_request_message_;
  ::freedm::broker::lb::DraftAgeMessage* draft_age_message_;
  ::freedm::broker::lb::DraftSelectMessage* draft_select_message_;
  ::freedm::broker::lb::DraftAcceptMessage* draft_accept_message_;
  ::freedm::broker::lb::TooLateMessage* too_late_message_;
  ::freedm::broker::lb::CollectedStateMessage* collected_state_message_;
  friend void  protobuf_AddDesc_LoadBalancing_2eproto();
  friend void protobuf_AssignDesc_LoadBalancing_2eproto();
  friend void protobuf_ShutdownFile_LoadBalancing_2eproto();

  void InitAsDefaultInstance();
  static LoadBalancingMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// StateChangeMessage

// required string state = 1;
inline bool StateChangeMessage::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateChangeMessage::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StateChangeMessage::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StateChangeMessage::clear_state() {
  if (state_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    state_->clear();
  }
  clear_has_state();
}
inline const ::std::string& StateChangeMessage::state() const {
  // @@protoc_insertion_point(field_get:freedm.broker.lb.StateChangeMessage.state)
  return *state_;
}
inline void StateChangeMessage::set_state(const ::std::string& value) {
  set_has_state();
  if (state_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    state_ = new ::std::string;
  }
  state_->assign(value);
  // @@protoc_insertion_point(field_set:freedm.broker.lb.StateChangeMessage.state)
}
inline void StateChangeMessage::set_state(const char* value) {
  set_has_state();
  if (state_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    state_ = new ::std::string;
  }
  state_->assign(value);
  // @@protoc_insertion_point(field_set_char:freedm.broker.lb.StateChangeMessage.state)
}
inline void StateChangeMessage::set_state(const char* value, size_t size) {
  set_has_state();
  if (state_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    state_ = new ::std::string;
  }
  state_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:freedm.broker.lb.StateChangeMessage.state)
}
inline ::std::string* StateChangeMessage::mutable_state() {
  set_has_state();
  if (state_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    state_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:freedm.broker.lb.StateChangeMessage.state)
  return state_;
}
inline ::std::string* StateChangeMessage::release_state() {
  clear_has_state();
  if (state_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = state_;
    state_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StateChangeMessage::set_allocated_state(::std::string* state) {
  if (state_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete state_;
  }
  if (state) {
    set_has_state();
    state_ = state;
  } else {
    clear_has_state();
    state_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:freedm.broker.lb.StateChangeMessage.state)
}

// -------------------------------------------------------------------

// DraftRequestMessage

// -------------------------------------------------------------------

// DraftAgeMessage

// required float draft_age = 1;
inline bool DraftAgeMessage::has_draft_age() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DraftAgeMessage::set_has_draft_age() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DraftAgeMessage::clear_has_draft_age() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DraftAgeMessage::clear_draft_age() {
  draft_age_ = 0;
  clear_has_draft_age();
}
inline float DraftAgeMessage::draft_age() const {
  // @@protoc_insertion_point(field_get:freedm.broker.lb.DraftAgeMessage.draft_age)
  return draft_age_;
}
inline void DraftAgeMessage::set_draft_age(float value) {
  set_has_draft_age();
  draft_age_ = value;
  // @@protoc_insertion_point(field_set:freedm.broker.lb.DraftAgeMessage.draft_age)
}

// -------------------------------------------------------------------

// DraftSelectMessage

// required float migrate_step = 1;
inline bool DraftSelectMessage::has_migrate_step() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DraftSelectMessage::set_has_migrate_step() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DraftSelectMessage::clear_has_migrate_step() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DraftSelectMessage::clear_migrate_step() {
  migrate_step_ = 0;
  clear_has_migrate_step();
}
inline float DraftSelectMessage::migrate_step() const {
  // @@protoc_insertion_point(field_get:freedm.broker.lb.DraftSelectMessage.migrate_step)
  return migrate_step_;
}
inline void DraftSelectMessage::set_migrate_step(float value) {
  set_has_migrate_step();
  migrate_step_ = value;
  // @@protoc_insertion_point(field_set:freedm.broker.lb.DraftSelectMessage.migrate_step)
}

// -------------------------------------------------------------------

// DraftAcceptMessage

// required float migrate_step = 1;
inline bool DraftAcceptMessage::has_migrate_step() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DraftAcceptMessage::set_has_migrate_step() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DraftAcceptMessage::clear_has_migrate_step() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DraftAcceptMessage::clear_migrate_step() {
  migrate_step_ = 0;
  clear_has_migrate_step();
}
inline float DraftAcceptMessage::migrate_step() const {
  // @@protoc_insertion_point(field_get:freedm.broker.lb.DraftAcceptMessage.migrate_step)
  return migrate_step_;
}
inline void DraftAcceptMessage::set_migrate_step(float value) {
  set_has_migrate_step();
  migrate_step_ = value;
  // @@protoc_insertion_point(field_set:freedm.broker.lb.DraftAcceptMessage.migrate_step)
}

// -------------------------------------------------------------------

// TooLateMessage

// required float migrate_step = 1;
inline bool TooLateMessage::has_migrate_step() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TooLateMessage::set_has_migrate_step() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TooLateMessage::clear_has_migrate_step() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TooLateMessage::clear_migrate_step() {
  migrate_step_ = 0;
  clear_has_migrate_step();
}
inline float TooLateMessage::migrate_step() const {
  // @@protoc_insertion_point(field_get:freedm.broker.lb.TooLateMessage.migrate_step)
  return migrate_step_;
}
inline void TooLateMessage::set_migrate_step(float value) {
  set_has_migrate_step();
  migrate_step_ = value;
  // @@protoc_insertion_point(field_set:freedm.broker.lb.TooLateMessage.migrate_step)
}

// -------------------------------------------------------------------

// CollectedStateMessage

// required float gross_power_flow = 1;
inline bool CollectedStateMessage::has_gross_power_flow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CollectedStateMessage::set_has_gross_power_flow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CollectedStateMessage::clear_has_gross_power_flow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CollectedStateMessage::clear_gross_power_flow() {
  gross_power_flow_ = 0;
  clear_has_gross_power_flow();
}
inline float CollectedStateMessage::gross_power_flow() const {
  // @@protoc_insertion_point(field_get:freedm.broker.lb.CollectedStateMessage.gross_power_flow)
  return gross_power_flow_;
}
inline void CollectedStateMessage::set_gross_power_flow(float value) {
  set_has_gross_power_flow();
  gross_power_flow_ = value;
  // @@protoc_insertion_point(field_set:freedm.broker.lb.CollectedStateMessage.gross_power_flow)
}

// -------------------------------------------------------------------

// LoadBalancingMessage

// optional .freedm.broker.lb.StateChangeMessage state_change_message = 1;
inline bool LoadBalancingMessage::has_state_change_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoadBalancingMessage::set_has_state_change_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoadBalancingMessage::clear_has_state_change_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoadBalancingMessage::clear_state_change_message() {
  if (state_change_message_ != NULL) state_change_message_->::freedm::broker::lb::StateChangeMessage::Clear();
  clear_has_state_change_message();
}
inline const ::freedm::broker::lb::StateChangeMessage& LoadBalancingMessage::state_change_message() const {
  // @@protoc_insertion_point(field_get:freedm.broker.lb.LoadBalancingMessage.state_change_message)
  return state_change_message_ != NULL ? *state_change_message_ : *default_instance_->state_change_message_;
}
inline ::freedm::broker::lb::StateChangeMessage* LoadBalancingMessage::mutable_state_change_message() {
  set_has_state_change_message();
  if (state_change_message_ == NULL) state_change_message_ = new ::freedm::broker::lb::StateChangeMessage;
  // @@protoc_insertion_point(field_mutable:freedm.broker.lb.LoadBalancingMessage.state_change_message)
  return state_change_message_;
}
inline ::freedm::broker::lb::StateChangeMessage* LoadBalancingMessage::release_state_change_message() {
  clear_has_state_change_message();
  ::freedm::broker::lb::StateChangeMessage* temp = state_change_message_;
  state_change_message_ = NULL;
  return temp;
}
inline void LoadBalancingMessage::set_allocated_state_change_message(::freedm::broker::lb::StateChangeMessage* state_change_message) {
  delete state_change_message_;
  state_change_message_ = state_change_message;
  if (state_change_message) {
    set_has_state_change_message();
  } else {
    clear_has_state_change_message();
  }
  // @@protoc_insertion_point(field_set_allocated:freedm.broker.lb.LoadBalancingMessage.state_change_message)
}

// optional .freedm.broker.lb.DraftRequestMessage draft_request_message = 2;
inline bool LoadBalancingMessage::has_draft_request_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoadBalancingMessage::set_has_draft_request_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoadBalancingMessage::clear_has_draft_request_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoadBalancingMessage::clear_draft_request_message() {
  if (draft_request_message_ != NULL) draft_request_message_->::freedm::broker::lb::DraftRequestMessage::Clear();
  clear_has_draft_request_message();
}
inline const ::freedm::broker::lb::DraftRequestMessage& LoadBalancingMessage::draft_request_message() const {
  // @@protoc_insertion_point(field_get:freedm.broker.lb.LoadBalancingMessage.draft_request_message)
  return draft_request_message_ != NULL ? *draft_request_message_ : *default_instance_->draft_request_message_;
}
inline ::freedm::broker::lb::DraftRequestMessage* LoadBalancingMessage::mutable_draft_request_message() {
  set_has_draft_request_message();
  if (draft_request_message_ == NULL) draft_request_message_ = new ::freedm::broker::lb::DraftRequestMessage;
  // @@protoc_insertion_point(field_mutable:freedm.broker.lb.LoadBalancingMessage.draft_request_message)
  return draft_request_message_;
}
inline ::freedm::broker::lb::DraftRequestMessage* LoadBalancingMessage::release_draft_request_message() {
  clear_has_draft_request_message();
  ::freedm::broker::lb::DraftRequestMessage* temp = draft_request_message_;
  draft_request_message_ = NULL;
  return temp;
}
inline void LoadBalancingMessage::set_allocated_draft_request_message(::freedm::broker::lb::DraftRequestMessage* draft_request_message) {
  delete draft_request_message_;
  draft_request_message_ = draft_request_message;
  if (draft_request_message) {
    set_has_draft_request_message();
  } else {
    clear_has_draft_request_message();
  }
  // @@protoc_insertion_point(field_set_allocated:freedm.broker.lb.LoadBalancingMessage.draft_request_message)
}

// optional .freedm.broker.lb.DraftAgeMessage draft_age_message = 3;
inline bool LoadBalancingMessage::has_draft_age_message() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoadBalancingMessage::set_has_draft_age_message() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoadBalancingMessage::clear_has_draft_age_message() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoadBalancingMessage::clear_draft_age_message() {
  if (draft_age_message_ != NULL) draft_age_message_->::freedm::broker::lb::DraftAgeMessage::Clear();
  clear_has_draft_age_message();
}
inline const ::freedm::broker::lb::DraftAgeMessage& LoadBalancingMessage::draft_age_message() const {
  // @@protoc_insertion_point(field_get:freedm.broker.lb.LoadBalancingMessage.draft_age_message)
  return draft_age_message_ != NULL ? *draft_age_message_ : *default_instance_->draft_age_message_;
}
inline ::freedm::broker::lb::DraftAgeMessage* LoadBalancingMessage::mutable_draft_age_message() {
  set_has_draft_age_message();
  if (draft_age_message_ == NULL) draft_age_message_ = new ::freedm::broker::lb::DraftAgeMessage;
  // @@protoc_insertion_point(field_mutable:freedm.broker.lb.LoadBalancingMessage.draft_age_message)
  return draft_age_message_;
}
inline ::freedm::broker::lb::DraftAgeMessage* LoadBalancingMessage::release_draft_age_message() {
  clear_has_draft_age_message();
  ::freedm::broker::lb::DraftAgeMessage* temp = draft_age_message_;
  draft_age_message_ = NULL;
  return temp;
}
inline void LoadBalancingMessage::set_allocated_draft_age_message(::freedm::broker::lb::DraftAgeMessage* draft_age_message) {
  delete draft_age_message_;
  draft_age_message_ = draft_age_message;
  if (draft_age_message) {
    set_has_draft_age_message();
  } else {
    clear_has_draft_age_message();
  }
  // @@protoc_insertion_point(field_set_allocated:freedm.broker.lb.LoadBalancingMessage.draft_age_message)
}

// optional .freedm.broker.lb.DraftSelectMessage draft_select_message = 4;
inline bool LoadBalancingMessage::has_draft_select_message() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoadBalancingMessage::set_has_draft_select_message() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoadBalancingMessage::clear_has_draft_select_message() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoadBalancingMessage::clear_draft_select_message() {
  if (draft_select_message_ != NULL) draft_select_message_->::freedm::broker::lb::DraftSelectMessage::Clear();
  clear_has_draft_select_message();
}
inline const ::freedm::broker::lb::DraftSelectMessage& LoadBalancingMessage::draft_select_message() const {
  // @@protoc_insertion_point(field_get:freedm.broker.lb.LoadBalancingMessage.draft_select_message)
  return draft_select_message_ != NULL ? *draft_select_message_ : *default_instance_->draft_select_message_;
}
inline ::freedm::broker::lb::DraftSelectMessage* LoadBalancingMessage::mutable_draft_select_message() {
  set_has_draft_select_message();
  if (draft_select_message_ == NULL) draft_select_message_ = new ::freedm::broker::lb::DraftSelectMessage;
  // @@protoc_insertion_point(field_mutable:freedm.broker.lb.LoadBalancingMessage.draft_select_message)
  return draft_select_message_;
}
inline ::freedm::broker::lb::DraftSelectMessage* LoadBalancingMessage::release_draft_select_message() {
  clear_has_draft_select_message();
  ::freedm::broker::lb::DraftSelectMessage* temp = draft_select_message_;
  draft_select_message_ = NULL;
  return temp;
}
inline void LoadBalancingMessage::set_allocated_draft_select_message(::freedm::broker::lb::DraftSelectMessage* draft_select_message) {
  delete draft_select_message_;
  draft_select_message_ = draft_select_message;
  if (draft_select_message) {
    set_has_draft_select_message();
  } else {
    clear_has_draft_select_message();
  }
  // @@protoc_insertion_point(field_set_allocated:freedm.broker.lb.LoadBalancingMessage.draft_select_message)
}

// optional .freedm.broker.lb.DraftAcceptMessage draft_accept_message = 5;
inline bool LoadBalancingMessage::has_draft_accept_message() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoadBalancingMessage::set_has_draft_accept_message() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoadBalancingMessage::clear_has_draft_accept_message() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoadBalancingMessage::clear_draft_accept_message() {
  if (draft_accept_message_ != NULL) draft_accept_message_->::freedm::broker::lb::DraftAcceptMessage::Clear();
  clear_has_draft_accept_message();
}
inline const ::freedm::broker::lb::DraftAcceptMessage& LoadBalancingMessage::draft_accept_message() const {
  // @@protoc_insertion_point(field_get:freedm.broker.lb.LoadBalancingMessage.draft_accept_message)
  return draft_accept_message_ != NULL ? *draft_accept_message_ : *default_instance_->draft_accept_message_;
}
inline ::freedm::broker::lb::DraftAcceptMessage* LoadBalancingMessage::mutable_draft_accept_message() {
  set_has_draft_accept_message();
  if (draft_accept_message_ == NULL) draft_accept_message_ = new ::freedm::broker::lb::DraftAcceptMessage;
  // @@protoc_insertion_point(field_mutable:freedm.broker.lb.LoadBalancingMessage.draft_accept_message)
  return draft_accept_message_;
}
inline ::freedm::broker::lb::DraftAcceptMessage* LoadBalancingMessage::release_draft_accept_message() {
  clear_has_draft_accept_message();
  ::freedm::broker::lb::DraftAcceptMessage* temp = draft_accept_message_;
  draft_accept_message_ = NULL;
  return temp;
}
inline void LoadBalancingMessage::set_allocated_draft_accept_message(::freedm::broker::lb::DraftAcceptMessage* draft_accept_message) {
  delete draft_accept_message_;
  draft_accept_message_ = draft_accept_message;
  if (draft_accept_message) {
    set_has_draft_accept_message();
  } else {
    clear_has_draft_accept_message();
  }
  // @@protoc_insertion_point(field_set_allocated:freedm.broker.lb.LoadBalancingMessage.draft_accept_message)
}

// optional .freedm.broker.lb.TooLateMessage too_late_message = 6;
inline bool LoadBalancingMessage::has_too_late_message() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoadBalancingMessage::set_has_too_late_message() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoadBalancingMessage::clear_has_too_late_message() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoadBalancingMessage::clear_too_late_message() {
  if (too_late_message_ != NULL) too_late_message_->::freedm::broker::lb::TooLateMessage::Clear();
  clear_has_too_late_message();
}
inline const ::freedm::broker::lb::TooLateMessage& LoadBalancingMessage::too_late_message() const {
  // @@protoc_insertion_point(field_get:freedm.broker.lb.LoadBalancingMessage.too_late_message)
  return too_late_message_ != NULL ? *too_late_message_ : *default_instance_->too_late_message_;
}
inline ::freedm::broker::lb::TooLateMessage* LoadBalancingMessage::mutable_too_late_message() {
  set_has_too_late_message();
  if (too_late_message_ == NULL) too_late_message_ = new ::freedm::broker::lb::TooLateMessage;
  // @@protoc_insertion_point(field_mutable:freedm.broker.lb.LoadBalancingMessage.too_late_message)
  return too_late_message_;
}
inline ::freedm::broker::lb::TooLateMessage* LoadBalancingMessage::release_too_late_message() {
  clear_has_too_late_message();
  ::freedm::broker::lb::TooLateMessage* temp = too_late_message_;
  too_late_message_ = NULL;
  return temp;
}
inline void LoadBalancingMessage::set_allocated_too_late_message(::freedm::broker::lb::TooLateMessage* too_late_message) {
  delete too_late_message_;
  too_late_message_ = too_late_message;
  if (too_late_message) {
    set_has_too_late_message();
  } else {
    clear_has_too_late_message();
  }
  // @@protoc_insertion_point(field_set_allocated:freedm.broker.lb.LoadBalancingMessage.too_late_message)
}

// optional .freedm.broker.lb.CollectedStateMessage collected_state_message = 7;
inline bool LoadBalancingMessage::has_collected_state_message() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LoadBalancingMessage::set_has_collected_state_message() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LoadBalancingMessage::clear_has_collected_state_message() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LoadBalancingMessage::clear_collected_state_message() {
  if (collected_state_message_ != NULL) collected_state_message_->::freedm::broker::lb::CollectedStateMessage::Clear();
  clear_has_collected_state_message();
}
inline const ::freedm::broker::lb::CollectedStateMessage& LoadBalancingMessage::collected_state_message() const {
  // @@protoc_insertion_point(field_get:freedm.broker.lb.LoadBalancingMessage.collected_state_message)
  return collected_state_message_ != NULL ? *collected_state_message_ : *default_instance_->collected_state_message_;
}
inline ::freedm::broker::lb::CollectedStateMessage* LoadBalancingMessage::mutable_collected_state_message() {
  set_has_collected_state_message();
  if (collected_state_message_ == NULL) collected_state_message_ = new ::freedm::broker::lb::CollectedStateMessage;
  // @@protoc_insertion_point(field_mutable:freedm.broker.lb.LoadBalancingMessage.collected_state_message)
  return collected_state_message_;
}
inline ::freedm::broker::lb::CollectedStateMessage* LoadBalancingMessage::release_collected_state_message() {
  clear_has_collected_state_message();
  ::freedm::broker::lb::CollectedStateMessage* temp = collected_state_message_;
  collected_state_message_ = NULL;
  return temp;
}
inline void LoadBalancingMessage::set_allocated_collected_state_message(::freedm::broker::lb::CollectedStateMessage* collected_state_message) {
  delete collected_state_message_;
  collected_state_message_ = collected_state_message;
  if (collected_state_message) {
    set_has_collected_state_message();
  } else {
    clear_has_collected_state_message();
  }
  // @@protoc_insertion_point(field_set_allocated:freedm.broker.lb.LoadBalancingMessage.collected_state_message)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace lb
}  // namespace broker
}  // namespace freedm

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_LoadBalancing_2eproto__INCLUDED
