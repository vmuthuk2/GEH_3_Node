// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VoltVarCtrl.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "VoltVarCtrl.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace freedm {
namespace broker {
namespace vvc {

namespace {

const ::google::protobuf::Descriptor* VoltageDeltaMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VoltageDeltaMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* LineReadingsMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LineReadingsMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* GradientMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GradientMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* VoltVarMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VoltVarMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_VoltVarCtrl_2eproto() {
  protobuf_AddDesc_VoltVarCtrl_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "VoltVarCtrl.proto");
  GOOGLE_CHECK(file != NULL);
  VoltageDeltaMessage_descriptor_ = file->message_type(0);
  static const int VoltageDeltaMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoltageDeltaMessage, control_factor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoltageDeltaMessage, phase_measurement_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoltageDeltaMessage, reading_location_),
  };
  VoltageDeltaMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      VoltageDeltaMessage_descriptor_,
      VoltageDeltaMessage::default_instance_,
      VoltageDeltaMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoltageDeltaMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoltageDeltaMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(VoltageDeltaMessage));
  LineReadingsMessage_descriptor_ = file->message_type(1);
  static const int LineReadingsMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LineReadingsMessage, measurement_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LineReadingsMessage, capture_time_),
  };
  LineReadingsMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LineReadingsMessage_descriptor_,
      LineReadingsMessage::default_instance_,
      LineReadingsMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LineReadingsMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LineReadingsMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LineReadingsMessage));
  GradientMessage_descriptor_ = file->message_type(2);
  static const int GradientMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GradientMessage, gradient_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GradientMessage, gradient_capture_time_),
  };
  GradientMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GradientMessage_descriptor_,
      GradientMessage::default_instance_,
      GradientMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GradientMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GradientMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GradientMessage));
  VoltVarMessage_descriptor_ = file->message_type(3);
  static const int VoltVarMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoltVarMessage, voltage_delta_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoltVarMessage, line_readings_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoltVarMessage, gradient_message_),
  };
  VoltVarMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      VoltVarMessage_descriptor_,
      VoltVarMessage::default_instance_,
      VoltVarMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoltVarMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoltVarMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(VoltVarMessage));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_VoltVarCtrl_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    VoltageDeltaMessage_descriptor_, &VoltageDeltaMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LineReadingsMessage_descriptor_, &LineReadingsMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GradientMessage_descriptor_, &GradientMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    VoltVarMessage_descriptor_, &VoltVarMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_VoltVarCtrl_2eproto() {
  delete VoltageDeltaMessage::default_instance_;
  delete VoltageDeltaMessage_reflection_;
  delete LineReadingsMessage::default_instance_;
  delete LineReadingsMessage_reflection_;
  delete GradientMessage::default_instance_;
  delete GradientMessage_reflection_;
  delete VoltVarMessage::default_instance_;
  delete VoltVarMessage_reflection_;
}

void protobuf_AddDesc_VoltVarCtrl_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021VoltVarCtrl.proto\022\021freedm.broker.vvc\"b"
    "\n\023VoltageDeltaMessage\022\026\n\016control_factor\030"
    "\001 \002(\r\022\031\n\021phase_measurement\030\002 \002(\002\022\030\n\020read"
    "ing_location\030\003 \001(\t\"@\n\023LineReadingsMessag"
    "e\022\023\n\013measurement\030\001 \003(\002\022\024\n\014capture_time\030\002"
    " \002(\t\"H\n\017GradientMessage\022\026\n\016gradient_valu"
    "e\030\001 \003(\001\022\035\n\025gradient_capture_time\030\002 \002(\t\"\334"
    "\001\n\016VoltVarMessage\022E\n\025voltage_delta_messa"
    "ge\030\001 \001(\0132&.freedm.broker.vvc.VoltageDelt"
    "aMessage\022E\n\025line_readings_message\030\002 \001(\0132"
    "&.freedm.broker.vvc.LineReadingsMessage\022"
    "<\n\020gradient_message\030\003 \001(\0132\".freedm.broke"
    "r.vvc.GradientMessage", 501);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "VoltVarCtrl.proto", &protobuf_RegisterTypes);
  VoltageDeltaMessage::default_instance_ = new VoltageDeltaMessage();
  LineReadingsMessage::default_instance_ = new LineReadingsMessage();
  GradientMessage::default_instance_ = new GradientMessage();
  VoltVarMessage::default_instance_ = new VoltVarMessage();
  VoltageDeltaMessage::default_instance_->InitAsDefaultInstance();
  LineReadingsMessage::default_instance_->InitAsDefaultInstance();
  GradientMessage::default_instance_->InitAsDefaultInstance();
  VoltVarMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_VoltVarCtrl_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_VoltVarCtrl_2eproto {
  StaticDescriptorInitializer_VoltVarCtrl_2eproto() {
    protobuf_AddDesc_VoltVarCtrl_2eproto();
  }
} static_descriptor_initializer_VoltVarCtrl_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int VoltageDeltaMessage::kControlFactorFieldNumber;
const int VoltageDeltaMessage::kPhaseMeasurementFieldNumber;
const int VoltageDeltaMessage::kReadingLocationFieldNumber;
#endif  // !_MSC_VER

VoltageDeltaMessage::VoltageDeltaMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:freedm.broker.vvc.VoltageDeltaMessage)
}

void VoltageDeltaMessage::InitAsDefaultInstance() {
}

VoltageDeltaMessage::VoltageDeltaMessage(const VoltageDeltaMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:freedm.broker.vvc.VoltageDeltaMessage)
}

void VoltageDeltaMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  control_factor_ = 0u;
  phase_measurement_ = 0;
  reading_location_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VoltageDeltaMessage::~VoltageDeltaMessage() {
  // @@protoc_insertion_point(destructor:freedm.broker.vvc.VoltageDeltaMessage)
  SharedDtor();
}

void VoltageDeltaMessage::SharedDtor() {
  if (reading_location_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reading_location_;
  }
  if (this != default_instance_) {
  }
}

void VoltageDeltaMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VoltageDeltaMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VoltageDeltaMessage_descriptor_;
}

const VoltageDeltaMessage& VoltageDeltaMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_VoltVarCtrl_2eproto();
  return *default_instance_;
}

VoltageDeltaMessage* VoltageDeltaMessage::default_instance_ = NULL;

VoltageDeltaMessage* VoltageDeltaMessage::New() const {
  return new VoltageDeltaMessage;
}

void VoltageDeltaMessage::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<VoltageDeltaMessage*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(control_factor_, phase_measurement_);
    if (has_reading_location()) {
      if (reading_location_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        reading_location_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool VoltageDeltaMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:freedm.broker.vvc.VoltageDeltaMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 control_factor = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &control_factor_)));
          set_has_control_factor();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_phase_measurement;
        break;
      }

      // required float phase_measurement = 2;
      case 2: {
        if (tag == 21) {
         parse_phase_measurement:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &phase_measurement_)));
          set_has_phase_measurement();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_reading_location;
        break;
      }

      // optional string reading_location = 3;
      case 3: {
        if (tag == 26) {
         parse_reading_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reading_location()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reading_location().data(), this->reading_location().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "reading_location");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:freedm.broker.vvc.VoltageDeltaMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:freedm.broker.vvc.VoltageDeltaMessage)
  return false;
#undef DO_
}

void VoltageDeltaMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:freedm.broker.vvc.VoltageDeltaMessage)
  // required uint32 control_factor = 1;
  if (has_control_factor()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->control_factor(), output);
  }

  // required float phase_measurement = 2;
  if (has_phase_measurement()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->phase_measurement(), output);
  }

  // optional string reading_location = 3;
  if (has_reading_location()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reading_location().data(), this->reading_location().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "reading_location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->reading_location(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:freedm.broker.vvc.VoltageDeltaMessage)
}

::google::protobuf::uint8* VoltageDeltaMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:freedm.broker.vvc.VoltageDeltaMessage)
  // required uint32 control_factor = 1;
  if (has_control_factor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->control_factor(), target);
  }

  // required float phase_measurement = 2;
  if (has_phase_measurement()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->phase_measurement(), target);
  }

  // optional string reading_location = 3;
  if (has_reading_location()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reading_location().data(), this->reading_location().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "reading_location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reading_location(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:freedm.broker.vvc.VoltageDeltaMessage)
  return target;
}

int VoltageDeltaMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 control_factor = 1;
    if (has_control_factor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->control_factor());
    }

    // required float phase_measurement = 2;
    if (has_phase_measurement()) {
      total_size += 1 + 4;
    }

    // optional string reading_location = 3;
    if (has_reading_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reading_location());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VoltageDeltaMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const VoltageDeltaMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const VoltageDeltaMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void VoltageDeltaMessage::MergeFrom(const VoltageDeltaMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_control_factor()) {
      set_control_factor(from.control_factor());
    }
    if (from.has_phase_measurement()) {
      set_phase_measurement(from.phase_measurement());
    }
    if (from.has_reading_location()) {
      set_reading_location(from.reading_location());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void VoltageDeltaMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoltageDeltaMessage::CopyFrom(const VoltageDeltaMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoltageDeltaMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void VoltageDeltaMessage::Swap(VoltageDeltaMessage* other) {
  if (other != this) {
    std::swap(control_factor_, other->control_factor_);
    std::swap(phase_measurement_, other->phase_measurement_);
    std::swap(reading_location_, other->reading_location_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata VoltageDeltaMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VoltageDeltaMessage_descriptor_;
  metadata.reflection = VoltageDeltaMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LineReadingsMessage::kMeasurementFieldNumber;
const int LineReadingsMessage::kCaptureTimeFieldNumber;
#endif  // !_MSC_VER

LineReadingsMessage::LineReadingsMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:freedm.broker.vvc.LineReadingsMessage)
}

void LineReadingsMessage::InitAsDefaultInstance() {
}

LineReadingsMessage::LineReadingsMessage(const LineReadingsMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:freedm.broker.vvc.LineReadingsMessage)
}

void LineReadingsMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  capture_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LineReadingsMessage::~LineReadingsMessage() {
  // @@protoc_insertion_point(destructor:freedm.broker.vvc.LineReadingsMessage)
  SharedDtor();
}

void LineReadingsMessage::SharedDtor() {
  if (capture_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete capture_time_;
  }
  if (this != default_instance_) {
  }
}

void LineReadingsMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LineReadingsMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LineReadingsMessage_descriptor_;
}

const LineReadingsMessage& LineReadingsMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_VoltVarCtrl_2eproto();
  return *default_instance_;
}

LineReadingsMessage* LineReadingsMessage::default_instance_ = NULL;

LineReadingsMessage* LineReadingsMessage::New() const {
  return new LineReadingsMessage;
}

void LineReadingsMessage::Clear() {
  if (has_capture_time()) {
    if (capture_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      capture_time_->clear();
    }
  }
  measurement_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LineReadingsMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:freedm.broker.vvc.LineReadingsMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float measurement = 1;
      case 1: {
        if (tag == 13) {
         parse_measurement:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 13, input, this->mutable_measurement())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_measurement())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(13)) goto parse_measurement;
        if (input->ExpectTag(18)) goto parse_capture_time;
        break;
      }

      // required string capture_time = 2;
      case 2: {
        if (tag == 18) {
         parse_capture_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_capture_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->capture_time().data(), this->capture_time().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "capture_time");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:freedm.broker.vvc.LineReadingsMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:freedm.broker.vvc.LineReadingsMessage)
  return false;
#undef DO_
}

void LineReadingsMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:freedm.broker.vvc.LineReadingsMessage)
  // repeated float measurement = 1;
  for (int i = 0; i < this->measurement_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      1, this->measurement(i), output);
  }

  // required string capture_time = 2;
  if (has_capture_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->capture_time().data(), this->capture_time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "capture_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->capture_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:freedm.broker.vvc.LineReadingsMessage)
}

::google::protobuf::uint8* LineReadingsMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:freedm.broker.vvc.LineReadingsMessage)
  // repeated float measurement = 1;
  for (int i = 0; i < this->measurement_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(1, this->measurement(i), target);
  }

  // required string capture_time = 2;
  if (has_capture_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->capture_time().data(), this->capture_time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "capture_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->capture_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:freedm.broker.vvc.LineReadingsMessage)
  return target;
}

int LineReadingsMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required string capture_time = 2;
    if (has_capture_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->capture_time());
    }

  }
  // repeated float measurement = 1;
  {
    int data_size = 0;
    data_size = 4 * this->measurement_size();
    total_size += 1 * this->measurement_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LineReadingsMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LineReadingsMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LineReadingsMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LineReadingsMessage::MergeFrom(const LineReadingsMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  measurement_.MergeFrom(from.measurement_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_capture_time()) {
      set_capture_time(from.capture_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LineReadingsMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LineReadingsMessage::CopyFrom(const LineReadingsMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LineReadingsMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void LineReadingsMessage::Swap(LineReadingsMessage* other) {
  if (other != this) {
    measurement_.Swap(&other->measurement_);
    std::swap(capture_time_, other->capture_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LineReadingsMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LineReadingsMessage_descriptor_;
  metadata.reflection = LineReadingsMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GradientMessage::kGradientValueFieldNumber;
const int GradientMessage::kGradientCaptureTimeFieldNumber;
#endif  // !_MSC_VER

GradientMessage::GradientMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:freedm.broker.vvc.GradientMessage)
}

void GradientMessage::InitAsDefaultInstance() {
}

GradientMessage::GradientMessage(const GradientMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:freedm.broker.vvc.GradientMessage)
}

void GradientMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  gradient_capture_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GradientMessage::~GradientMessage() {
  // @@protoc_insertion_point(destructor:freedm.broker.vvc.GradientMessage)
  SharedDtor();
}

void GradientMessage::SharedDtor() {
  if (gradient_capture_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gradient_capture_time_;
  }
  if (this != default_instance_) {
  }
}

void GradientMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GradientMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GradientMessage_descriptor_;
}

const GradientMessage& GradientMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_VoltVarCtrl_2eproto();
  return *default_instance_;
}

GradientMessage* GradientMessage::default_instance_ = NULL;

GradientMessage* GradientMessage::New() const {
  return new GradientMessage;
}

void GradientMessage::Clear() {
  if (has_gradient_capture_time()) {
    if (gradient_capture_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      gradient_capture_time_->clear();
    }
  }
  gradient_value_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GradientMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:freedm.broker.vvc.GradientMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double gradient_value = 1;
      case 1: {
        if (tag == 9) {
         parse_gradient_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9, input, this->mutable_gradient_value())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_gradient_value())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(9)) goto parse_gradient_value;
        if (input->ExpectTag(18)) goto parse_gradient_capture_time;
        break;
      }

      // required string gradient_capture_time = 2;
      case 2: {
        if (tag == 18) {
         parse_gradient_capture_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gradient_capture_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gradient_capture_time().data(), this->gradient_capture_time().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gradient_capture_time");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:freedm.broker.vvc.GradientMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:freedm.broker.vvc.GradientMessage)
  return false;
#undef DO_
}

void GradientMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:freedm.broker.vvc.GradientMessage)
  // repeated double gradient_value = 1;
  for (int i = 0; i < this->gradient_value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->gradient_value(i), output);
  }

  // required string gradient_capture_time = 2;
  if (has_gradient_capture_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gradient_capture_time().data(), this->gradient_capture_time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gradient_capture_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gradient_capture_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:freedm.broker.vvc.GradientMessage)
}

::google::protobuf::uint8* GradientMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:freedm.broker.vvc.GradientMessage)
  // repeated double gradient_value = 1;
  for (int i = 0; i < this->gradient_value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(1, this->gradient_value(i), target);
  }

  // required string gradient_capture_time = 2;
  if (has_gradient_capture_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gradient_capture_time().data(), this->gradient_capture_time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gradient_capture_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gradient_capture_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:freedm.broker.vvc.GradientMessage)
  return target;
}

int GradientMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required string gradient_capture_time = 2;
    if (has_gradient_capture_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gradient_capture_time());
    }

  }
  // repeated double gradient_value = 1;
  {
    int data_size = 0;
    data_size = 8 * this->gradient_value_size();
    total_size += 1 * this->gradient_value_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GradientMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GradientMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GradientMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GradientMessage::MergeFrom(const GradientMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  gradient_value_.MergeFrom(from.gradient_value_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_gradient_capture_time()) {
      set_gradient_capture_time(from.gradient_capture_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GradientMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GradientMessage::CopyFrom(const GradientMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GradientMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void GradientMessage::Swap(GradientMessage* other) {
  if (other != this) {
    gradient_value_.Swap(&other->gradient_value_);
    std::swap(gradient_capture_time_, other->gradient_capture_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GradientMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GradientMessage_descriptor_;
  metadata.reflection = GradientMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int VoltVarMessage::kVoltageDeltaMessageFieldNumber;
const int VoltVarMessage::kLineReadingsMessageFieldNumber;
const int VoltVarMessage::kGradientMessageFieldNumber;
#endif  // !_MSC_VER

VoltVarMessage::VoltVarMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:freedm.broker.vvc.VoltVarMessage)
}

void VoltVarMessage::InitAsDefaultInstance() {
  voltage_delta_message_ = const_cast< ::freedm::broker::vvc::VoltageDeltaMessage*>(&::freedm::broker::vvc::VoltageDeltaMessage::default_instance());
  line_readings_message_ = const_cast< ::freedm::broker::vvc::LineReadingsMessage*>(&::freedm::broker::vvc::LineReadingsMessage::default_instance());
  gradient_message_ = const_cast< ::freedm::broker::vvc::GradientMessage*>(&::freedm::broker::vvc::GradientMessage::default_instance());
}

VoltVarMessage::VoltVarMessage(const VoltVarMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:freedm.broker.vvc.VoltVarMessage)
}

void VoltVarMessage::SharedCtor() {
  _cached_size_ = 0;
  voltage_delta_message_ = NULL;
  line_readings_message_ = NULL;
  gradient_message_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VoltVarMessage::~VoltVarMessage() {
  // @@protoc_insertion_point(destructor:freedm.broker.vvc.VoltVarMessage)
  SharedDtor();
}

void VoltVarMessage::SharedDtor() {
  if (this != default_instance_) {
    delete voltage_delta_message_;
    delete line_readings_message_;
    delete gradient_message_;
  }
}

void VoltVarMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VoltVarMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VoltVarMessage_descriptor_;
}

const VoltVarMessage& VoltVarMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_VoltVarCtrl_2eproto();
  return *default_instance_;
}

VoltVarMessage* VoltVarMessage::default_instance_ = NULL;

VoltVarMessage* VoltVarMessage::New() const {
  return new VoltVarMessage;
}

void VoltVarMessage::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_voltage_delta_message()) {
      if (voltage_delta_message_ != NULL) voltage_delta_message_->::freedm::broker::vvc::VoltageDeltaMessage::Clear();
    }
    if (has_line_readings_message()) {
      if (line_readings_message_ != NULL) line_readings_message_->::freedm::broker::vvc::LineReadingsMessage::Clear();
    }
    if (has_gradient_message()) {
      if (gradient_message_ != NULL) gradient_message_->::freedm::broker::vvc::GradientMessage::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool VoltVarMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:freedm.broker.vvc.VoltVarMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .freedm.broker.vvc.VoltageDeltaMessage voltage_delta_message = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_voltage_delta_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_line_readings_message;
        break;
      }

      // optional .freedm.broker.vvc.LineReadingsMessage line_readings_message = 2;
      case 2: {
        if (tag == 18) {
         parse_line_readings_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_line_readings_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_gradient_message;
        break;
      }

      // optional .freedm.broker.vvc.GradientMessage gradient_message = 3;
      case 3: {
        if (tag == 26) {
         parse_gradient_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gradient_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:freedm.broker.vvc.VoltVarMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:freedm.broker.vvc.VoltVarMessage)
  return false;
#undef DO_
}

void VoltVarMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:freedm.broker.vvc.VoltVarMessage)
  // optional .freedm.broker.vvc.VoltageDeltaMessage voltage_delta_message = 1;
  if (has_voltage_delta_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->voltage_delta_message(), output);
  }

  // optional .freedm.broker.vvc.LineReadingsMessage line_readings_message = 2;
  if (has_line_readings_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->line_readings_message(), output);
  }

  // optional .freedm.broker.vvc.GradientMessage gradient_message = 3;
  if (has_gradient_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->gradient_message(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:freedm.broker.vvc.VoltVarMessage)
}

::google::protobuf::uint8* VoltVarMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:freedm.broker.vvc.VoltVarMessage)
  // optional .freedm.broker.vvc.VoltageDeltaMessage voltage_delta_message = 1;
  if (has_voltage_delta_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->voltage_delta_message(), target);
  }

  // optional .freedm.broker.vvc.LineReadingsMessage line_readings_message = 2;
  if (has_line_readings_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->line_readings_message(), target);
  }

  // optional .freedm.broker.vvc.GradientMessage gradient_message = 3;
  if (has_gradient_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->gradient_message(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:freedm.broker.vvc.VoltVarMessage)
  return target;
}

int VoltVarMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .freedm.broker.vvc.VoltageDeltaMessage voltage_delta_message = 1;
    if (has_voltage_delta_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->voltage_delta_message());
    }

    // optional .freedm.broker.vvc.LineReadingsMessage line_readings_message = 2;
    if (has_line_readings_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->line_readings_message());
    }

    // optional .freedm.broker.vvc.GradientMessage gradient_message = 3;
    if (has_gradient_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gradient_message());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VoltVarMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const VoltVarMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const VoltVarMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void VoltVarMessage::MergeFrom(const VoltVarMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_voltage_delta_message()) {
      mutable_voltage_delta_message()->::freedm::broker::vvc::VoltageDeltaMessage::MergeFrom(from.voltage_delta_message());
    }
    if (from.has_line_readings_message()) {
      mutable_line_readings_message()->::freedm::broker::vvc::LineReadingsMessage::MergeFrom(from.line_readings_message());
    }
    if (from.has_gradient_message()) {
      mutable_gradient_message()->::freedm::broker::vvc::GradientMessage::MergeFrom(from.gradient_message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void VoltVarMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoltVarMessage::CopyFrom(const VoltVarMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoltVarMessage::IsInitialized() const {

  if (has_voltage_delta_message()) {
    if (!this->voltage_delta_message().IsInitialized()) return false;
  }
  if (has_line_readings_message()) {
    if (!this->line_readings_message().IsInitialized()) return false;
  }
  if (has_gradient_message()) {
    if (!this->gradient_message().IsInitialized()) return false;
  }
  return true;
}

void VoltVarMessage::Swap(VoltVarMessage* other) {
  if (other != this) {
    std::swap(voltage_delta_message_, other->voltage_delta_message_);
    std::swap(line_readings_message_, other->line_readings_message_);
    std::swap(gradient_message_, other->gradient_message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata VoltVarMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VoltVarMessage_descriptor_;
  metadata.reflection = VoltVarMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vvc
}  // namespace broker
}  // namespace freedm

// @@protoc_insertion_point(global_scope)
