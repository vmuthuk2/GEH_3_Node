// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LoadBalancing.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "LoadBalancing.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace freedm {
namespace broker {
namespace lb {

namespace {

const ::google::protobuf::Descriptor* StateChangeMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StateChangeMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* DraftRequestMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DraftRequestMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* DraftAgeMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DraftAgeMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* DraftSelectMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DraftSelectMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* DraftAcceptMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DraftAcceptMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TooLateMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TooLateMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* CollectedStateMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CollectedStateMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoadBalancingMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoadBalancingMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_LoadBalancing_2eproto() {
  protobuf_AddDesc_LoadBalancing_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "LoadBalancing.proto");
  GOOGLE_CHECK(file != NULL);
  StateChangeMessage_descriptor_ = file->message_type(0);
  static const int StateChangeMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateChangeMessage, state_),
  };
  StateChangeMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StateChangeMessage_descriptor_,
      StateChangeMessage::default_instance_,
      StateChangeMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateChangeMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateChangeMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StateChangeMessage));
  DraftRequestMessage_descriptor_ = file->message_type(1);
  static const int DraftRequestMessage_offsets_[1] = {
  };
  DraftRequestMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DraftRequestMessage_descriptor_,
      DraftRequestMessage::default_instance_,
      DraftRequestMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DraftRequestMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DraftRequestMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DraftRequestMessage));
  DraftAgeMessage_descriptor_ = file->message_type(2);
  static const int DraftAgeMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DraftAgeMessage, draft_age_),
  };
  DraftAgeMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DraftAgeMessage_descriptor_,
      DraftAgeMessage::default_instance_,
      DraftAgeMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DraftAgeMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DraftAgeMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DraftAgeMessage));
  DraftSelectMessage_descriptor_ = file->message_type(3);
  static const int DraftSelectMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DraftSelectMessage, migrate_step_),
  };
  DraftSelectMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DraftSelectMessage_descriptor_,
      DraftSelectMessage::default_instance_,
      DraftSelectMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DraftSelectMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DraftSelectMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DraftSelectMessage));
  DraftAcceptMessage_descriptor_ = file->message_type(4);
  static const int DraftAcceptMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DraftAcceptMessage, migrate_step_),
  };
  DraftAcceptMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DraftAcceptMessage_descriptor_,
      DraftAcceptMessage::default_instance_,
      DraftAcceptMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DraftAcceptMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DraftAcceptMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DraftAcceptMessage));
  TooLateMessage_descriptor_ = file->message_type(5);
  static const int TooLateMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TooLateMessage, migrate_step_),
  };
  TooLateMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TooLateMessage_descriptor_,
      TooLateMessage::default_instance_,
      TooLateMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TooLateMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TooLateMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TooLateMessage));
  CollectedStateMessage_descriptor_ = file->message_type(6);
  static const int CollectedStateMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectedStateMessage, gross_power_flow_),
  };
  CollectedStateMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CollectedStateMessage_descriptor_,
      CollectedStateMessage::default_instance_,
      CollectedStateMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectedStateMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectedStateMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CollectedStateMessage));
  LoadBalancingMessage_descriptor_ = file->message_type(7);
  static const int LoadBalancingMessage_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadBalancingMessage, state_change_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadBalancingMessage, draft_request_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadBalancingMessage, draft_age_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadBalancingMessage, draft_select_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadBalancingMessage, draft_accept_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadBalancingMessage, too_late_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadBalancingMessage, collected_state_message_),
  };
  LoadBalancingMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LoadBalancingMessage_descriptor_,
      LoadBalancingMessage::default_instance_,
      LoadBalancingMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadBalancingMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadBalancingMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LoadBalancingMessage));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_LoadBalancing_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StateChangeMessage_descriptor_, &StateChangeMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DraftRequestMessage_descriptor_, &DraftRequestMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DraftAgeMessage_descriptor_, &DraftAgeMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DraftSelectMessage_descriptor_, &DraftSelectMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DraftAcceptMessage_descriptor_, &DraftAcceptMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TooLateMessage_descriptor_, &TooLateMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CollectedStateMessage_descriptor_, &CollectedStateMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LoadBalancingMessage_descriptor_, &LoadBalancingMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_LoadBalancing_2eproto() {
  delete StateChangeMessage::default_instance_;
  delete StateChangeMessage_reflection_;
  delete DraftRequestMessage::default_instance_;
  delete DraftRequestMessage_reflection_;
  delete DraftAgeMessage::default_instance_;
  delete DraftAgeMessage_reflection_;
  delete DraftSelectMessage::default_instance_;
  delete DraftSelectMessage_reflection_;
  delete DraftAcceptMessage::default_instance_;
  delete DraftAcceptMessage_reflection_;
  delete TooLateMessage::default_instance_;
  delete TooLateMessage_reflection_;
  delete CollectedStateMessage::default_instance_;
  delete CollectedStateMessage_reflection_;
  delete LoadBalancingMessage::default_instance_;
  delete LoadBalancingMessage_reflection_;
}

void protobuf_AddDesc_LoadBalancing_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023LoadBalancing.proto\022\020freedm.broker.lb\""
    "#\n\022StateChangeMessage\022\r\n\005state\030\001 \002(\t\"\025\n\023"
    "DraftRequestMessage\"$\n\017DraftAgeMessage\022\021"
    "\n\tdraft_age\030\001 \002(\002\"*\n\022DraftSelectMessage\022"
    "\024\n\014migrate_step\030\001 \002(\002\"*\n\022DraftAcceptMess"
    "age\022\024\n\014migrate_step\030\001 \002(\002\"&\n\016TooLateMess"
    "age\022\024\n\014migrate_step\030\001 \002(\002\"1\n\025CollectedSt"
    "ateMessage\022\030\n\020gross_power_flow\030\001 \002(\002\"\354\003\n"
    "\024LoadBalancingMessage\022B\n\024state_change_me"
    "ssage\030\001 \001(\0132$.freedm.broker.lb.StateChan"
    "geMessage\022D\n\025draft_request_message\030\002 \001(\013"
    "2%.freedm.broker.lb.DraftRequestMessage\022"
    "<\n\021draft_age_message\030\003 \001(\0132!.freedm.brok"
    "er.lb.DraftAgeMessage\022B\n\024draft_select_me"
    "ssage\030\004 \001(\0132$.freedm.broker.lb.DraftSele"
    "ctMessage\022B\n\024draft_accept_message\030\005 \001(\0132"
    "$.freedm.broker.lb.DraftAcceptMessage\022:\n"
    "\020too_late_message\030\006 \001(\0132 .freedm.broker."
    "lb.TooLateMessage\022H\n\027collected_state_mes"
    "sage\030\007 \001(\0132\'.freedm.broker.lb.CollectedS"
    "tateMessage", 811);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "LoadBalancing.proto", &protobuf_RegisterTypes);
  StateChangeMessage::default_instance_ = new StateChangeMessage();
  DraftRequestMessage::default_instance_ = new DraftRequestMessage();
  DraftAgeMessage::default_instance_ = new DraftAgeMessage();
  DraftSelectMessage::default_instance_ = new DraftSelectMessage();
  DraftAcceptMessage::default_instance_ = new DraftAcceptMessage();
  TooLateMessage::default_instance_ = new TooLateMessage();
  CollectedStateMessage::default_instance_ = new CollectedStateMessage();
  LoadBalancingMessage::default_instance_ = new LoadBalancingMessage();
  StateChangeMessage::default_instance_->InitAsDefaultInstance();
  DraftRequestMessage::default_instance_->InitAsDefaultInstance();
  DraftAgeMessage::default_instance_->InitAsDefaultInstance();
  DraftSelectMessage::default_instance_->InitAsDefaultInstance();
  DraftAcceptMessage::default_instance_->InitAsDefaultInstance();
  TooLateMessage::default_instance_->InitAsDefaultInstance();
  CollectedStateMessage::default_instance_->InitAsDefaultInstance();
  LoadBalancingMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_LoadBalancing_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_LoadBalancing_2eproto {
  StaticDescriptorInitializer_LoadBalancing_2eproto() {
    protobuf_AddDesc_LoadBalancing_2eproto();
  }
} static_descriptor_initializer_LoadBalancing_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int StateChangeMessage::kStateFieldNumber;
#endif  // !_MSC_VER

StateChangeMessage::StateChangeMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:freedm.broker.lb.StateChangeMessage)
}

void StateChangeMessage::InitAsDefaultInstance() {
}

StateChangeMessage::StateChangeMessage(const StateChangeMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:freedm.broker.lb.StateChangeMessage)
}

void StateChangeMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  state_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StateChangeMessage::~StateChangeMessage() {
  // @@protoc_insertion_point(destructor:freedm.broker.lb.StateChangeMessage)
  SharedDtor();
}

void StateChangeMessage::SharedDtor() {
  if (state_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete state_;
  }
  if (this != default_instance_) {
  }
}

void StateChangeMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StateChangeMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StateChangeMessage_descriptor_;
}

const StateChangeMessage& StateChangeMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LoadBalancing_2eproto();
  return *default_instance_;
}

StateChangeMessage* StateChangeMessage::default_instance_ = NULL;

StateChangeMessage* StateChangeMessage::New() const {
  return new StateChangeMessage;
}

void StateChangeMessage::Clear() {
  if (has_state()) {
    if (state_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      state_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StateChangeMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:freedm.broker.lb.StateChangeMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string state = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->state().data(), this->state().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "state");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:freedm.broker.lb.StateChangeMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:freedm.broker.lb.StateChangeMessage)
  return false;
#undef DO_
}

void StateChangeMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:freedm.broker.lb.StateChangeMessage)
  // required string state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), this->state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->state(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:freedm.broker.lb.StateChangeMessage)
}

::google::protobuf::uint8* StateChangeMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:freedm.broker.lb.StateChangeMessage)
  // required string state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), this->state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->state(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:freedm.broker.lb.StateChangeMessage)
  return target;
}

int StateChangeMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string state = 1;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->state());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StateChangeMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StateChangeMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StateChangeMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StateChangeMessage::MergeFrom(const StateChangeMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StateChangeMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateChangeMessage::CopyFrom(const StateChangeMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateChangeMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void StateChangeMessage::Swap(StateChangeMessage* other) {
  if (other != this) {
    std::swap(state_, other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StateChangeMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StateChangeMessage_descriptor_;
  metadata.reflection = StateChangeMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

DraftRequestMessage::DraftRequestMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:freedm.broker.lb.DraftRequestMessage)
}

void DraftRequestMessage::InitAsDefaultInstance() {
}

DraftRequestMessage::DraftRequestMessage(const DraftRequestMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:freedm.broker.lb.DraftRequestMessage)
}

void DraftRequestMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DraftRequestMessage::~DraftRequestMessage() {
  // @@protoc_insertion_point(destructor:freedm.broker.lb.DraftRequestMessage)
  SharedDtor();
}

void DraftRequestMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DraftRequestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DraftRequestMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DraftRequestMessage_descriptor_;
}

const DraftRequestMessage& DraftRequestMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LoadBalancing_2eproto();
  return *default_instance_;
}

DraftRequestMessage* DraftRequestMessage::default_instance_ = NULL;

DraftRequestMessage* DraftRequestMessage::New() const {
  return new DraftRequestMessage;
}

void DraftRequestMessage::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DraftRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:freedm.broker.lb.DraftRequestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:freedm.broker.lb.DraftRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:freedm.broker.lb.DraftRequestMessage)
  return false;
#undef DO_
}

void DraftRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:freedm.broker.lb.DraftRequestMessage)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:freedm.broker.lb.DraftRequestMessage)
}

::google::protobuf::uint8* DraftRequestMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:freedm.broker.lb.DraftRequestMessage)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:freedm.broker.lb.DraftRequestMessage)
  return target;
}

int DraftRequestMessage::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DraftRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DraftRequestMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DraftRequestMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DraftRequestMessage::MergeFrom(const DraftRequestMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DraftRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DraftRequestMessage::CopyFrom(const DraftRequestMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DraftRequestMessage::IsInitialized() const {

  return true;
}

void DraftRequestMessage::Swap(DraftRequestMessage* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DraftRequestMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DraftRequestMessage_descriptor_;
  metadata.reflection = DraftRequestMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DraftAgeMessage::kDraftAgeFieldNumber;
#endif  // !_MSC_VER

DraftAgeMessage::DraftAgeMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:freedm.broker.lb.DraftAgeMessage)
}

void DraftAgeMessage::InitAsDefaultInstance() {
}

DraftAgeMessage::DraftAgeMessage(const DraftAgeMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:freedm.broker.lb.DraftAgeMessage)
}

void DraftAgeMessage::SharedCtor() {
  _cached_size_ = 0;
  draft_age_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DraftAgeMessage::~DraftAgeMessage() {
  // @@protoc_insertion_point(destructor:freedm.broker.lb.DraftAgeMessage)
  SharedDtor();
}

void DraftAgeMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DraftAgeMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DraftAgeMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DraftAgeMessage_descriptor_;
}

const DraftAgeMessage& DraftAgeMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LoadBalancing_2eproto();
  return *default_instance_;
}

DraftAgeMessage* DraftAgeMessage::default_instance_ = NULL;

DraftAgeMessage* DraftAgeMessage::New() const {
  return new DraftAgeMessage;
}

void DraftAgeMessage::Clear() {
  draft_age_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DraftAgeMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:freedm.broker.lb.DraftAgeMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float draft_age = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &draft_age_)));
          set_has_draft_age();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:freedm.broker.lb.DraftAgeMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:freedm.broker.lb.DraftAgeMessage)
  return false;
#undef DO_
}

void DraftAgeMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:freedm.broker.lb.DraftAgeMessage)
  // required float draft_age = 1;
  if (has_draft_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->draft_age(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:freedm.broker.lb.DraftAgeMessage)
}

::google::protobuf::uint8* DraftAgeMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:freedm.broker.lb.DraftAgeMessage)
  // required float draft_age = 1;
  if (has_draft_age()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->draft_age(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:freedm.broker.lb.DraftAgeMessage)
  return target;
}

int DraftAgeMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float draft_age = 1;
    if (has_draft_age()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DraftAgeMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DraftAgeMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DraftAgeMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DraftAgeMessage::MergeFrom(const DraftAgeMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_draft_age()) {
      set_draft_age(from.draft_age());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DraftAgeMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DraftAgeMessage::CopyFrom(const DraftAgeMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DraftAgeMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DraftAgeMessage::Swap(DraftAgeMessage* other) {
  if (other != this) {
    std::swap(draft_age_, other->draft_age_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DraftAgeMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DraftAgeMessage_descriptor_;
  metadata.reflection = DraftAgeMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DraftSelectMessage::kMigrateStepFieldNumber;
#endif  // !_MSC_VER

DraftSelectMessage::DraftSelectMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:freedm.broker.lb.DraftSelectMessage)
}

void DraftSelectMessage::InitAsDefaultInstance() {
}

DraftSelectMessage::DraftSelectMessage(const DraftSelectMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:freedm.broker.lb.DraftSelectMessage)
}

void DraftSelectMessage::SharedCtor() {
  _cached_size_ = 0;
  migrate_step_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DraftSelectMessage::~DraftSelectMessage() {
  // @@protoc_insertion_point(destructor:freedm.broker.lb.DraftSelectMessage)
  SharedDtor();
}

void DraftSelectMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DraftSelectMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DraftSelectMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DraftSelectMessage_descriptor_;
}

const DraftSelectMessage& DraftSelectMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LoadBalancing_2eproto();
  return *default_instance_;
}

DraftSelectMessage* DraftSelectMessage::default_instance_ = NULL;

DraftSelectMessage* DraftSelectMessage::New() const {
  return new DraftSelectMessage;
}

void DraftSelectMessage::Clear() {
  migrate_step_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DraftSelectMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:freedm.broker.lb.DraftSelectMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float migrate_step = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &migrate_step_)));
          set_has_migrate_step();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:freedm.broker.lb.DraftSelectMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:freedm.broker.lb.DraftSelectMessage)
  return false;
#undef DO_
}

void DraftSelectMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:freedm.broker.lb.DraftSelectMessage)
  // required float migrate_step = 1;
  if (has_migrate_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->migrate_step(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:freedm.broker.lb.DraftSelectMessage)
}

::google::protobuf::uint8* DraftSelectMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:freedm.broker.lb.DraftSelectMessage)
  // required float migrate_step = 1;
  if (has_migrate_step()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->migrate_step(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:freedm.broker.lb.DraftSelectMessage)
  return target;
}

int DraftSelectMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float migrate_step = 1;
    if (has_migrate_step()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DraftSelectMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DraftSelectMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DraftSelectMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DraftSelectMessage::MergeFrom(const DraftSelectMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_migrate_step()) {
      set_migrate_step(from.migrate_step());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DraftSelectMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DraftSelectMessage::CopyFrom(const DraftSelectMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DraftSelectMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DraftSelectMessage::Swap(DraftSelectMessage* other) {
  if (other != this) {
    std::swap(migrate_step_, other->migrate_step_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DraftSelectMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DraftSelectMessage_descriptor_;
  metadata.reflection = DraftSelectMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DraftAcceptMessage::kMigrateStepFieldNumber;
#endif  // !_MSC_VER

DraftAcceptMessage::DraftAcceptMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:freedm.broker.lb.DraftAcceptMessage)
}

void DraftAcceptMessage::InitAsDefaultInstance() {
}

DraftAcceptMessage::DraftAcceptMessage(const DraftAcceptMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:freedm.broker.lb.DraftAcceptMessage)
}

void DraftAcceptMessage::SharedCtor() {
  _cached_size_ = 0;
  migrate_step_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DraftAcceptMessage::~DraftAcceptMessage() {
  // @@protoc_insertion_point(destructor:freedm.broker.lb.DraftAcceptMessage)
  SharedDtor();
}

void DraftAcceptMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DraftAcceptMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DraftAcceptMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DraftAcceptMessage_descriptor_;
}

const DraftAcceptMessage& DraftAcceptMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LoadBalancing_2eproto();
  return *default_instance_;
}

DraftAcceptMessage* DraftAcceptMessage::default_instance_ = NULL;

DraftAcceptMessage* DraftAcceptMessage::New() const {
  return new DraftAcceptMessage;
}

void DraftAcceptMessage::Clear() {
  migrate_step_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DraftAcceptMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:freedm.broker.lb.DraftAcceptMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float migrate_step = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &migrate_step_)));
          set_has_migrate_step();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:freedm.broker.lb.DraftAcceptMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:freedm.broker.lb.DraftAcceptMessage)
  return false;
#undef DO_
}

void DraftAcceptMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:freedm.broker.lb.DraftAcceptMessage)
  // required float migrate_step = 1;
  if (has_migrate_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->migrate_step(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:freedm.broker.lb.DraftAcceptMessage)
}

::google::protobuf::uint8* DraftAcceptMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:freedm.broker.lb.DraftAcceptMessage)
  // required float migrate_step = 1;
  if (has_migrate_step()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->migrate_step(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:freedm.broker.lb.DraftAcceptMessage)
  return target;
}

int DraftAcceptMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float migrate_step = 1;
    if (has_migrate_step()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DraftAcceptMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DraftAcceptMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DraftAcceptMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DraftAcceptMessage::MergeFrom(const DraftAcceptMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_migrate_step()) {
      set_migrate_step(from.migrate_step());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DraftAcceptMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DraftAcceptMessage::CopyFrom(const DraftAcceptMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DraftAcceptMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DraftAcceptMessage::Swap(DraftAcceptMessage* other) {
  if (other != this) {
    std::swap(migrate_step_, other->migrate_step_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DraftAcceptMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DraftAcceptMessage_descriptor_;
  metadata.reflection = DraftAcceptMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TooLateMessage::kMigrateStepFieldNumber;
#endif  // !_MSC_VER

TooLateMessage::TooLateMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:freedm.broker.lb.TooLateMessage)
}

void TooLateMessage::InitAsDefaultInstance() {
}

TooLateMessage::TooLateMessage(const TooLateMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:freedm.broker.lb.TooLateMessage)
}

void TooLateMessage::SharedCtor() {
  _cached_size_ = 0;
  migrate_step_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TooLateMessage::~TooLateMessage() {
  // @@protoc_insertion_point(destructor:freedm.broker.lb.TooLateMessage)
  SharedDtor();
}

void TooLateMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TooLateMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TooLateMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TooLateMessage_descriptor_;
}

const TooLateMessage& TooLateMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LoadBalancing_2eproto();
  return *default_instance_;
}

TooLateMessage* TooLateMessage::default_instance_ = NULL;

TooLateMessage* TooLateMessage::New() const {
  return new TooLateMessage;
}

void TooLateMessage::Clear() {
  migrate_step_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TooLateMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:freedm.broker.lb.TooLateMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float migrate_step = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &migrate_step_)));
          set_has_migrate_step();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:freedm.broker.lb.TooLateMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:freedm.broker.lb.TooLateMessage)
  return false;
#undef DO_
}

void TooLateMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:freedm.broker.lb.TooLateMessage)
  // required float migrate_step = 1;
  if (has_migrate_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->migrate_step(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:freedm.broker.lb.TooLateMessage)
}

::google::protobuf::uint8* TooLateMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:freedm.broker.lb.TooLateMessage)
  // required float migrate_step = 1;
  if (has_migrate_step()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->migrate_step(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:freedm.broker.lb.TooLateMessage)
  return target;
}

int TooLateMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float migrate_step = 1;
    if (has_migrate_step()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TooLateMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TooLateMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TooLateMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TooLateMessage::MergeFrom(const TooLateMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_migrate_step()) {
      set_migrate_step(from.migrate_step());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TooLateMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TooLateMessage::CopyFrom(const TooLateMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TooLateMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TooLateMessage::Swap(TooLateMessage* other) {
  if (other != this) {
    std::swap(migrate_step_, other->migrate_step_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TooLateMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TooLateMessage_descriptor_;
  metadata.reflection = TooLateMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CollectedStateMessage::kGrossPowerFlowFieldNumber;
#endif  // !_MSC_VER

CollectedStateMessage::CollectedStateMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:freedm.broker.lb.CollectedStateMessage)
}

void CollectedStateMessage::InitAsDefaultInstance() {
}

CollectedStateMessage::CollectedStateMessage(const CollectedStateMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:freedm.broker.lb.CollectedStateMessage)
}

void CollectedStateMessage::SharedCtor() {
  _cached_size_ = 0;
  gross_power_flow_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CollectedStateMessage::~CollectedStateMessage() {
  // @@protoc_insertion_point(destructor:freedm.broker.lb.CollectedStateMessage)
  SharedDtor();
}

void CollectedStateMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CollectedStateMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CollectedStateMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CollectedStateMessage_descriptor_;
}

const CollectedStateMessage& CollectedStateMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LoadBalancing_2eproto();
  return *default_instance_;
}

CollectedStateMessage* CollectedStateMessage::default_instance_ = NULL;

CollectedStateMessage* CollectedStateMessage::New() const {
  return new CollectedStateMessage;
}

void CollectedStateMessage::Clear() {
  gross_power_flow_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CollectedStateMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:freedm.broker.lb.CollectedStateMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float gross_power_flow = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &gross_power_flow_)));
          set_has_gross_power_flow();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:freedm.broker.lb.CollectedStateMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:freedm.broker.lb.CollectedStateMessage)
  return false;
#undef DO_
}

void CollectedStateMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:freedm.broker.lb.CollectedStateMessage)
  // required float gross_power_flow = 1;
  if (has_gross_power_flow()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->gross_power_flow(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:freedm.broker.lb.CollectedStateMessage)
}

::google::protobuf::uint8* CollectedStateMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:freedm.broker.lb.CollectedStateMessage)
  // required float gross_power_flow = 1;
  if (has_gross_power_flow()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->gross_power_flow(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:freedm.broker.lb.CollectedStateMessage)
  return target;
}

int CollectedStateMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float gross_power_flow = 1;
    if (has_gross_power_flow()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CollectedStateMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CollectedStateMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CollectedStateMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CollectedStateMessage::MergeFrom(const CollectedStateMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gross_power_flow()) {
      set_gross_power_flow(from.gross_power_flow());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CollectedStateMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollectedStateMessage::CopyFrom(const CollectedStateMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectedStateMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CollectedStateMessage::Swap(CollectedStateMessage* other) {
  if (other != this) {
    std::swap(gross_power_flow_, other->gross_power_flow_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CollectedStateMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CollectedStateMessage_descriptor_;
  metadata.reflection = CollectedStateMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LoadBalancingMessage::kStateChangeMessageFieldNumber;
const int LoadBalancingMessage::kDraftRequestMessageFieldNumber;
const int LoadBalancingMessage::kDraftAgeMessageFieldNumber;
const int LoadBalancingMessage::kDraftSelectMessageFieldNumber;
const int LoadBalancingMessage::kDraftAcceptMessageFieldNumber;
const int LoadBalancingMessage::kTooLateMessageFieldNumber;
const int LoadBalancingMessage::kCollectedStateMessageFieldNumber;
#endif  // !_MSC_VER

LoadBalancingMessage::LoadBalancingMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:freedm.broker.lb.LoadBalancingMessage)
}

void LoadBalancingMessage::InitAsDefaultInstance() {
  state_change_message_ = const_cast< ::freedm::broker::lb::StateChangeMessage*>(&::freedm::broker::lb::StateChangeMessage::default_instance());
  draft_request_message_ = const_cast< ::freedm::broker::lb::DraftRequestMessage*>(&::freedm::broker::lb::DraftRequestMessage::default_instance());
  draft_age_message_ = const_cast< ::freedm::broker::lb::DraftAgeMessage*>(&::freedm::broker::lb::DraftAgeMessage::default_instance());
  draft_select_message_ = const_cast< ::freedm::broker::lb::DraftSelectMessage*>(&::freedm::broker::lb::DraftSelectMessage::default_instance());
  draft_accept_message_ = const_cast< ::freedm::broker::lb::DraftAcceptMessage*>(&::freedm::broker::lb::DraftAcceptMessage::default_instance());
  too_late_message_ = const_cast< ::freedm::broker::lb::TooLateMessage*>(&::freedm::broker::lb::TooLateMessage::default_instance());
  collected_state_message_ = const_cast< ::freedm::broker::lb::CollectedStateMessage*>(&::freedm::broker::lb::CollectedStateMessage::default_instance());
}

LoadBalancingMessage::LoadBalancingMessage(const LoadBalancingMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:freedm.broker.lb.LoadBalancingMessage)
}

void LoadBalancingMessage::SharedCtor() {
  _cached_size_ = 0;
  state_change_message_ = NULL;
  draft_request_message_ = NULL;
  draft_age_message_ = NULL;
  draft_select_message_ = NULL;
  draft_accept_message_ = NULL;
  too_late_message_ = NULL;
  collected_state_message_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoadBalancingMessage::~LoadBalancingMessage() {
  // @@protoc_insertion_point(destructor:freedm.broker.lb.LoadBalancingMessage)
  SharedDtor();
}

void LoadBalancingMessage::SharedDtor() {
  if (this != default_instance_) {
    delete state_change_message_;
    delete draft_request_message_;
    delete draft_age_message_;
    delete draft_select_message_;
    delete draft_accept_message_;
    delete too_late_message_;
    delete collected_state_message_;
  }
}

void LoadBalancingMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadBalancingMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoadBalancingMessage_descriptor_;
}

const LoadBalancingMessage& LoadBalancingMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LoadBalancing_2eproto();
  return *default_instance_;
}

LoadBalancingMessage* LoadBalancingMessage::default_instance_ = NULL;

LoadBalancingMessage* LoadBalancingMessage::New() const {
  return new LoadBalancingMessage;
}

void LoadBalancingMessage::Clear() {
  if (_has_bits_[0 / 32] & 127) {
    if (has_state_change_message()) {
      if (state_change_message_ != NULL) state_change_message_->::freedm::broker::lb::StateChangeMessage::Clear();
    }
    if (has_draft_request_message()) {
      if (draft_request_message_ != NULL) draft_request_message_->::freedm::broker::lb::DraftRequestMessage::Clear();
    }
    if (has_draft_age_message()) {
      if (draft_age_message_ != NULL) draft_age_message_->::freedm::broker::lb::DraftAgeMessage::Clear();
    }
    if (has_draft_select_message()) {
      if (draft_select_message_ != NULL) draft_select_message_->::freedm::broker::lb::DraftSelectMessage::Clear();
    }
    if (has_draft_accept_message()) {
      if (draft_accept_message_ != NULL) draft_accept_message_->::freedm::broker::lb::DraftAcceptMessage::Clear();
    }
    if (has_too_late_message()) {
      if (too_late_message_ != NULL) too_late_message_->::freedm::broker::lb::TooLateMessage::Clear();
    }
    if (has_collected_state_message()) {
      if (collected_state_message_ != NULL) collected_state_message_->::freedm::broker::lb::CollectedStateMessage::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LoadBalancingMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:freedm.broker.lb.LoadBalancingMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .freedm.broker.lb.StateChangeMessage state_change_message = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_state_change_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_draft_request_message;
        break;
      }

      // optional .freedm.broker.lb.DraftRequestMessage draft_request_message = 2;
      case 2: {
        if (tag == 18) {
         parse_draft_request_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_draft_request_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_draft_age_message;
        break;
      }

      // optional .freedm.broker.lb.DraftAgeMessage draft_age_message = 3;
      case 3: {
        if (tag == 26) {
         parse_draft_age_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_draft_age_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_draft_select_message;
        break;
      }

      // optional .freedm.broker.lb.DraftSelectMessage draft_select_message = 4;
      case 4: {
        if (tag == 34) {
         parse_draft_select_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_draft_select_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_draft_accept_message;
        break;
      }

      // optional .freedm.broker.lb.DraftAcceptMessage draft_accept_message = 5;
      case 5: {
        if (tag == 42) {
         parse_draft_accept_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_draft_accept_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_too_late_message;
        break;
      }

      // optional .freedm.broker.lb.TooLateMessage too_late_message = 6;
      case 6: {
        if (tag == 50) {
         parse_too_late_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_too_late_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_collected_state_message;
        break;
      }

      // optional .freedm.broker.lb.CollectedStateMessage collected_state_message = 7;
      case 7: {
        if (tag == 58) {
         parse_collected_state_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_collected_state_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:freedm.broker.lb.LoadBalancingMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:freedm.broker.lb.LoadBalancingMessage)
  return false;
#undef DO_
}

void LoadBalancingMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:freedm.broker.lb.LoadBalancingMessage)
  // optional .freedm.broker.lb.StateChangeMessage state_change_message = 1;
  if (has_state_change_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->state_change_message(), output);
  }

  // optional .freedm.broker.lb.DraftRequestMessage draft_request_message = 2;
  if (has_draft_request_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->draft_request_message(), output);
  }

  // optional .freedm.broker.lb.DraftAgeMessage draft_age_message = 3;
  if (has_draft_age_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->draft_age_message(), output);
  }

  // optional .freedm.broker.lb.DraftSelectMessage draft_select_message = 4;
  if (has_draft_select_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->draft_select_message(), output);
  }

  // optional .freedm.broker.lb.DraftAcceptMessage draft_accept_message = 5;
  if (has_draft_accept_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->draft_accept_message(), output);
  }

  // optional .freedm.broker.lb.TooLateMessage too_late_message = 6;
  if (has_too_late_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->too_late_message(), output);
  }

  // optional .freedm.broker.lb.CollectedStateMessage collected_state_message = 7;
  if (has_collected_state_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->collected_state_message(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:freedm.broker.lb.LoadBalancingMessage)
}

::google::protobuf::uint8* LoadBalancingMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:freedm.broker.lb.LoadBalancingMessage)
  // optional .freedm.broker.lb.StateChangeMessage state_change_message = 1;
  if (has_state_change_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->state_change_message(), target);
  }

  // optional .freedm.broker.lb.DraftRequestMessage draft_request_message = 2;
  if (has_draft_request_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->draft_request_message(), target);
  }

  // optional .freedm.broker.lb.DraftAgeMessage draft_age_message = 3;
  if (has_draft_age_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->draft_age_message(), target);
  }

  // optional .freedm.broker.lb.DraftSelectMessage draft_select_message = 4;
  if (has_draft_select_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->draft_select_message(), target);
  }

  // optional .freedm.broker.lb.DraftAcceptMessage draft_accept_message = 5;
  if (has_draft_accept_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->draft_accept_message(), target);
  }

  // optional .freedm.broker.lb.TooLateMessage too_late_message = 6;
  if (has_too_late_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->too_late_message(), target);
  }

  // optional .freedm.broker.lb.CollectedStateMessage collected_state_message = 7;
  if (has_collected_state_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->collected_state_message(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:freedm.broker.lb.LoadBalancingMessage)
  return target;
}

int LoadBalancingMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .freedm.broker.lb.StateChangeMessage state_change_message = 1;
    if (has_state_change_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->state_change_message());
    }

    // optional .freedm.broker.lb.DraftRequestMessage draft_request_message = 2;
    if (has_draft_request_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->draft_request_message());
    }

    // optional .freedm.broker.lb.DraftAgeMessage draft_age_message = 3;
    if (has_draft_age_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->draft_age_message());
    }

    // optional .freedm.broker.lb.DraftSelectMessage draft_select_message = 4;
    if (has_draft_select_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->draft_select_message());
    }

    // optional .freedm.broker.lb.DraftAcceptMessage draft_accept_message = 5;
    if (has_draft_accept_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->draft_accept_message());
    }

    // optional .freedm.broker.lb.TooLateMessage too_late_message = 6;
    if (has_too_late_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->too_late_message());
    }

    // optional .freedm.broker.lb.CollectedStateMessage collected_state_message = 7;
    if (has_collected_state_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->collected_state_message());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoadBalancingMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LoadBalancingMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoadBalancingMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoadBalancingMessage::MergeFrom(const LoadBalancingMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_state_change_message()) {
      mutable_state_change_message()->::freedm::broker::lb::StateChangeMessage::MergeFrom(from.state_change_message());
    }
    if (from.has_draft_request_message()) {
      mutable_draft_request_message()->::freedm::broker::lb::DraftRequestMessage::MergeFrom(from.draft_request_message());
    }
    if (from.has_draft_age_message()) {
      mutable_draft_age_message()->::freedm::broker::lb::DraftAgeMessage::MergeFrom(from.draft_age_message());
    }
    if (from.has_draft_select_message()) {
      mutable_draft_select_message()->::freedm::broker::lb::DraftSelectMessage::MergeFrom(from.draft_select_message());
    }
    if (from.has_draft_accept_message()) {
      mutable_draft_accept_message()->::freedm::broker::lb::DraftAcceptMessage::MergeFrom(from.draft_accept_message());
    }
    if (from.has_too_late_message()) {
      mutable_too_late_message()->::freedm::broker::lb::TooLateMessage::MergeFrom(from.too_late_message());
    }
    if (from.has_collected_state_message()) {
      mutable_collected_state_message()->::freedm::broker::lb::CollectedStateMessage::MergeFrom(from.collected_state_message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LoadBalancingMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadBalancingMessage::CopyFrom(const LoadBalancingMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadBalancingMessage::IsInitialized() const {

  if (has_state_change_message()) {
    if (!this->state_change_message().IsInitialized()) return false;
  }
  if (has_draft_age_message()) {
    if (!this->draft_age_message().IsInitialized()) return false;
  }
  if (has_draft_select_message()) {
    if (!this->draft_select_message().IsInitialized()) return false;
  }
  if (has_draft_accept_message()) {
    if (!this->draft_accept_message().IsInitialized()) return false;
  }
  if (has_too_late_message()) {
    if (!this->too_late_message().IsInitialized()) return false;
  }
  if (has_collected_state_message()) {
    if (!this->collected_state_message().IsInitialized()) return false;
  }
  return true;
}

void LoadBalancingMessage::Swap(LoadBalancingMessage* other) {
  if (other != this) {
    std::swap(state_change_message_, other->state_change_message_);
    std::swap(draft_request_message_, other->draft_request_message_);
    std::swap(draft_age_message_, other->draft_age_message_);
    std::swap(draft_select_message_, other->draft_select_message_);
    std::swap(draft_accept_message_, other->draft_accept_message_);
    std::swap(too_late_message_, other->too_late_message_);
    std::swap(collected_state_message_, other->collected_state_message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LoadBalancingMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoadBalancingMessage_descriptor_;
  metadata.reflection = LoadBalancingMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace lb
}  // namespace broker
}  // namespace freedm

// @@protoc_insertion_point(global_scope)
